package core

templ CreationForm(url, target, swap string, button templ.Component, inputs ...templ.Component) {
	<form class="space-y-6" hx-post={ url } hx-swap={ swap } hx-target={ target } hx-target-error="#error-msg">
		for _, input := range inputs {
			<div>
				@input
			</div>
		}
		<div id="test">
			@button
		</div>
		@Error("")
	</form>
}

templ Button(label string, attrs templ.Attributes) {
	<button { attrs... } class="flex w-full justify-center rounded-md bg-primary-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-primary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600">{ label }</button>
}

func DefaultButton(buttonType string) templ.Attributes {
	return templ.Attributes{"type": buttonType}
}

templ Input(label string, labelAttrs, inputAttrs templ.Attributes) {
	<label { labelAttrs... } class="block text-sm font-medium leading-6 text-gray-900">{ label }</label>
	<div class="mt-2">
		<input { inputAttrs... } class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"/>
	</div>
}

func DefaultLabel(labelFor string) templ.Attributes {
	return templ.Attributes{"for": labelFor}
}

func DefaultRequiredInput(name, inputType string, automcomplete ...string) templ.Attributes {
	attrs := DefaultInput(name, inputType, automcomplete...)
	attrs["required"] = true
	return attrs
}

func DefaultInput(name, inputType string, autocomplete ...string) templ.Attributes {
	attrs := templ.Attributes{"id": name, "name": name, "type": inputType}
	if len(autocomplete) > 0 {
		attrs["autocomplete"] = autocomplete
	}
	return attrs
}

templ TextArea(label string, labelAttrs, textAreaAttrs templ.Attributes) {
	<label { labelAttrs... } class="block text-sm font-medium leading-6 text-gray-900">{ label }</label>
	<textarea { textAreaAttrs... } class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"></textarea>
}

func DefaultRequiredTextArea(name string, maxLength int) templ.Attributes {
	attrs := DefaultTextArea(name, maxLength)
	attrs["required"] = true
	return attrs
}

func DefaultTextArea(name string, maxLength int) templ.Attributes {
	return templ.Attributes{"id": name, "name": name, "maxlength": maxLength}
}
