package notify

import "github.com/Alieksieiev0/feed-templ/internal/types"

script observeNotifications() {
    document.body.addEventListener('htmx:load', function(evt) {
        const el = evt.detail.elt;
        if (!el.id.includes("notification-")) {
            return;
        }
        const parent = el.parentNode;
        if (parent.childElemntCount <= 10) {
            return
        }
        parent.removeChild(parent.lastChild);
    });
}

templ Menu() {
	@observeNotifications()
	<button
		data-dropdown-toggle="notifications-menu"
		class="text-blue-400 hover:text-white hover:ripple-bg-blue-300 rounded-lg px-2 py-2"
	>
		<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
			<path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0"></path>
		</svg>
	</button>
	<div
		id="notifications-menu"
		class="absolute z-10 hidden w-auto text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm"
	>
		<div hx-ext="sse" sse-connect="/notifications/listen" sse-swap="message" hx-target="#notifications" hx-swap="afterbegin"></div>
		<div hx-get="/notifications?limit=10" hx-trigger="load" hx-swap="outerHTML"></div>
	</div>
}

templ Notifications(notifications []types.Notification) {
	<div id="notifications">
		if countNew(notifications) == 0 {
			<div class="p-4 text-lg">
				You dont have any new notifications for today!
			</div>
		}
		for _, n := range notifications {
			if (n.IsNew()) {
				@Notification(n)
			}
		}
		/*
		<a href="/user-notifications" class="flex w-full justify-center text-lg rounded-md bg-primary-600 py-2 font-semibold leading-6 text-white shadow-sm hover:bg-primary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600">
			View All 
		</a>
        */
	</div>
}

func countNew(notifications []types.Notification) int {
	count := 0
	for _, n := range notifications {
		if n.IsNew() {
			count++
		}
	}
	return count
}

templ Notification(notification types.Notification) {
	<div
		id={ "notification-" + notification.Id }
		class="flex w-full items-center gap-4 rounded-md px-3 py-2 pr-8 pl-2 text-start outline-none transition-all hover:bg-blue-50 hover:bg-opacity-80 hover:text-blue-900 focus:bg-blue-50 focus:bg-opacity-80 focus:text-blue-900 active:bg-blue-50 active:bg-opacity-80 active:text-blue-900"
	>
		<div class="relative bg-gray-100 inline-block h-10 w-10 overflow-hidden !rounded-full object-cover object-center">
			<svg class="absolute w-12 h-12 text-gray-400 -left-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path></svg>
		</div>
		<div class="flex flex-col gap-1">
			<p class="block font-sans text-lg font-normal leading-normal text-gray-700 antialiased">
				<a href={ templ.SafeURL("/profile/" + notification.FromId) }><span class="font-medium text-primary-900">{ notification.FromName }</span></a> { notification.Message() }
			</p>
			<p class="flex items-center gap-1 font-sans font-light text-gray-600 antialiased">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					aria-hidden="true"
					class="h-3 w-3"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"
					></path>
				</svg>
				{ notification.CreatedAt.Format("January 2, 2006") }
			</p>
		</div>
		<button
			type="button"
			hx-put={ "/notifications/review/" + notification.Id }
			class="rounded-md p-2 inline-flex items-center justify-center text-gray-400 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500"
			hx-target="notifications"
			hx-swap="outerHTML"
		>
			<span class="sr-only"></span>
			<svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
			</svg>
		</button>
	</div>
}
